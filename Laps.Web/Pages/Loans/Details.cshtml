@page
@model Laps.Web.Pages.Loans.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Application Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.OwnerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.OwnerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.ExternalId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.ExternalId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.Purpose)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.Purpose)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.Age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.Age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.EmploymentType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.EmploymentType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.IncomePerMonth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.IncomePerMonth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.Zip)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.Zip)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.MobileNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.MobileNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.LoanAmount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.LoanAmount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.ApplicationSubmittedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.ApplicationSubmittedOn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LoanApplication.StatusLastUpdatedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LoanApplication.StatusLastUpdatedOn)
        </dd>
    </dl>
</div>

@if (Model.LoanApplication.Status <= LoanStatus.UnderReview || Model.LoanApplication.Status == LoanStatus.AwaitingManagersApproval)
{
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model.LoanApplication,
LoanOperations.Review)).Succeeded || User.IsInRole(Constants.LoanManagersRole))
    {
        <a asp-page="./Review" asp-route-id="@Model.LoanApplication.Id">Review Application</a>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model.LoanApplication,
LoanOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.LoanApplication.Id">Edit</a>
        <text> | </text>
        <a asp-page="./Withdraw" asp-route-id="@Model.LoanApplication.Id">Withdraw</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>
